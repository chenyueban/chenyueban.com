{"data":{"site":{"siteMetadata":{"title":"月半小夜曲"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"前言 如同字面意思，Suspense 让组件遇到异步操作时进入“悬停”状态，等异步操作有结果时再回归正常状态。 异步操作简单归为两类： 异步加载代码 异步加载数据 异步加载代码 异步加载代码就是所谓的  ，实现起来就像是这样： 值得一提的是目前版本 (截止至 react@16.…","fields":{"slug":"/React Suspense 尝鲜/"},"frontmatter":{"date":"March 06, 2019","title":"React Suspense 尝鲜","description":"Suspense 让组件遇到异步操作时进入“悬停”状态，等异步操作有结果时再回归正常状态。"}}},{"node":{"excerpt":"语义化是前端开发里面的一个专用术语，其优点在于标签语义化有助于构架良好的html结构，有利于搜索引擎的建立索引、抓取；另外，亦有利于页面在不同的设备上显示尽可能相同；此外，亦有利于构建清晰的机构，有利于团队的开发、维护。 前端语义化一度和 HTML…","fields":{"slug":"/聊聊前端语义化的今天/"},"frontmatter":{"date":"February 27, 2019","title":"聊聊前端语义化的今天","description":"前端语义化一度和 HTML 相关联，前端开发者们通过使用一些视觉表现类似，语义不同的 HTML 标签来提高 项目/产品 质量。在这里我聊得可能范围更加宽泛，包括但不仅仅是 HTML 的语义化。"}}},{"node":{"excerpt":"前端现在是黎明前的黑暗，在几年内一定会明晰起来 前言 随着前端代码日益膨胀，JSer 开始需要通过模块化规范去管理代码。 由于在 ES6 之前并没有规范化的模块化机制，所以社区也是不断涌现出各种解决方案，比如文件拆分、全局变量、命名空间，以及  YUI…","fields":{"slug":"/聊聊前端模块化/"},"frontmatter":{"date":"February 22, 2019","title":"聊聊前端模块化","description":"前端现在是黎明前的黑暗，在几年内一定会明晰起来"}}}]}},"pageContext":{}}